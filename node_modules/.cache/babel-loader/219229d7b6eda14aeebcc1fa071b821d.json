{"ast":null,"code":"import _classCallCheck from \"/Users/JonWong/Desktop/catchthesehands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JonWong/Desktop/catchthesehands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JonWong/Desktop/catchthesehands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JonWong/Desktop/catchthesehands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JonWong/Desktop/catchthesehands/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JonWong/Desktop/catchthesehands/src/components/points.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nvar Points =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Points, _Component);\n\n  function Points() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Points);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Points)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      names: [],\n      placeholder: \"\",\n      changeMeToReloadDOM: \"\"\n    };\n\n    _this.handleTextFieldChange = function (name, e) {\n      var index;\n\n      for (var i = 0; i < _this.state.names.length; i++) {\n        if (name == _this.state.names[i].name) {\n          index = i;\n          break;\n        }\n      }\n\n      _this.state.names[index].textfield = e.target.value;\n      console.log(_this.state.names[index]);\n\n      _this.setState({\n        changeMeToReloadDOM: \"\"\n      });\n    };\n\n    _this.newRoundButton = function () {\n      // console.log(this.state.names);\n      _this.state.names.map(function (n) {\n        n.points += parseInt(n.textfield);\n      });\n\n      console.log(_this.state.names);\n      localStorage.setItem('foo', _this.state.names);\n      window.location.reload(); // console.log(\"RELOAD WINDOW [DISABLED]\")\n    };\n\n    return _this;\n  }\n\n  _createClass(Points, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"mounting\");\n      console.log(JSON.parse(localStorage.getItem(\"foo\")));\n      var arrayNames = document.cookie.substring(document.cookie.indexOf(\";\") + 2).split(\"|\");\n      var namesAndPoints = [];\n      arrayNames.map(function (n, index, arr) {\n        if (!(index == arr.length - 1)) {\n          console.log(n);\n          namesAndPoints.push({\n            name: n,\n            points: 0,\n            textfield: \"\"\n          });\n        }\n      });\n      this.setState({\n        names: namesAndPoints\n      });\n      console.log(this.state.names);\n      console.log(namesAndPoints);\n      console.log(\"finished mounting\");\n    } //NOTE TO SELF: onKeyPress uses event.key, while onChange uses event.target.value\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var names = this.state.names;\n      return React.createElement(\"div\", {\n        id: \"biggest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, names.map(function (n) {\n        return React.createElement(\"div\", {\n          id: n.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \" \", n.name.charAt(0).toUpperCase() + n.name.slice(1), \" : \", n.points, \" \"), React.createElement(TextField, {\n          label: \"Points\",\n          type: \"number\",\n          value: n.textfield,\n          onChange: _this2.handleTextFieldChange.bind(_this2, n.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      }), React.createElement(Button, {\n        onClick: this.newRoundButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" New Round! \"));\n    }\n  }]);\n\n  return Points;\n}(Component);\n\nexport default Points;","map":{"version":3,"sources":["/Users/JonWong/Desktop/catchthesehands/src/components/points.js"],"names":["React","Component","TextField","Button","Points","state","names","placeholder","changeMeToReloadDOM","handleTextFieldChange","name","e","index","i","length","textfield","target","value","console","log","setState","newRoundButton","map","n","points","parseInt","localStorage","setItem","window","location","reload","JSON","parse","getItem","arrayNames","document","cookie","substring","indexOf","split","namesAndPoints","arr","push","charAt","toUpperCase","slice","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass Points extends Component {\n    state = {\n        names: [],\n        placeholder: \"\",\n        changeMeToReloadDOM : \"\",\n    }\n\n    componentDidMount() {\n        console.log(\"mounting\")\n        console.log(JSON.parse(localStorage.getItem(\"foo\")));\n        var arrayNames = document.cookie.substring(document.cookie.indexOf(\";\")+2).split(\"|\");\n        var namesAndPoints = [];\n        arrayNames.map((n, index, arr) => {\n            if (!(index == arr.length-1)) {\n                console.log(n);\n                namesAndPoints.push({\n                    name: n,\n                    points: 0,\n                    textfield: \"\"\n                })\n            }\n\n        })\n        this.setState({names: namesAndPoints})\n        console.log(this.state.names);\n        console.log(namesAndPoints)\n        console.log(\"finished mounting\")\n    }\n\n    //NOTE TO SELF: onKeyPress uses event.key, while onChange uses event.target.value\n    handleTextFieldChange = (name, e) => {\n        var index;\n        for (var i = 0; i < this.state.names.length; i++){\n            if (name == this.state.names[i].name) {\n                index = i; break;\n            }\n        }\n        this.state.names[index].textfield = e.target.value;\n        console.log(this.state.names[index]);\n        this.setState({changeMeToReloadDOM: \"\"});\n    }\n\n    newRoundButton = () => {\n\n        // console.log(this.state.names);\n        this.state.names.map((n) => {\n            n.points += parseInt(n.textfield);\n        })\n        console.log(this.state.names);\n        localStorage.setItem('foo', this.state.names)\n        window.location.reload();\n        // console.log(\"RELOAD WINDOW [DISABLED]\")\n    }\n\n    render() {\n        const { names } = this.state\n        return (\n            <div id = \"biggest\">\n            { names.map((n) => {\n                    return <div id = {n.name}>\n                        <h1> {n.name.charAt(0).toUpperCase() + n.name.slice(1)} : {n.points} </h1>\n                        <TextField  label = \"Points\"\n                                    type = \"number\"\n                                    value = {n.textfield}\n                                    onChange={this.handleTextFieldChange.bind(this, n.name)}\n                                    />\n                     </div>\n                })}\n            <Button onClick = {this.newRoundButton}> New Round! </Button>\n            </div>\n        )\n    }\n}\n\nexport default Points;\n"]},"metadata":{},"sourceType":"module"}